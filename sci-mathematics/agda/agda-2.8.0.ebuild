# Copyright 1999-2025 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

EAPI=8

# ebuild generated by hackport 0.9.1.0.9999

CABAL_HACKAGE_REVISION=2
CABAL_PN="Agda"
CABAL_PV="2.8.0" # the version of Agda as it appears on Hackage
CABAL_P="${CABAL_PN}-${CABAL_PV}"

CABAL_FEATURES="lib profile haddock hoogle hscolour"
inherit ghc-package haskell-cabal elisp-common

DESCRIPTION="A dependently typed functional programming language and proof assistant"
HOMEPAGE="https://wiki.portal.chalmers.se/agda/"

## shared with sci-mathematics/agda-stdlib
# upstream does not maintain version ordering:
#  https://github.com/agda/agda-stdlib/releases
# 0.11 -> 2.5.0.20160213 -> 2.5.0.20160412 -> 0.12
# As Agda-stdlib is tied to Agda version we encode
# both versions in gentoo version.
##
MY_UPSTREAM_AGDA_STDLIB_V="2.3"
MY_GENTOO_AGDA_STDLIB_V="${PV}.${MY_UPSTREAM_AGDA_STDLIB_V}"
S="${WORKDIR}/${CABAL_P}"

LICENSE="MIT"
SLOT="0/${PV}"
KEYWORDS="~amd64"
IUSE="debug dump-core emacs enable-cluster-counting +optimise-heavily +stdlib xdg-data-home"

PATCHES=(
	"${FILESDIR}/${PN}-2.8.0-add-emacs-flag.patch"
)

RDEPEND=">=dev-haskell/aeson-1.4.7.1:=[profile?] <dev-haskell/aeson-2.3:=[profile?]
	>=dev-haskell/ansi-terminal-0.10.3:=[profile?] <dev-haskell/ansi-terminal-1.2:=[profile?]
	>=dev-haskell/async-2.2.2:=[profile?] <dev-haskell/async-2.3:=[profile?]
	>=dev-haskell/blaze-html-0.9.1.2:=[profile?] <dev-haskell/blaze-html-0.10:=[profile?]
	>=dev-haskell/boxes-0.1.5:=[profile?] <dev-haskell/boxes-0.2:=[profile?]
	>=dev-haskell/case-insensitive-1.2.1.0:=[profile?] <dev-haskell/case-insensitive-1.3:=[profile?]
	>=dev-haskell/data-hash-0.2.0.1:=[profile?] <dev-haskell/data-hash-0.3:=[profile?]
	>=dev-haskell/dlist-0.8.0.8:=[profile?] <dev-haskell/dlist-1.1:=[profile?]
	>=dev-haskell/edit-distance-0.2.2.1:=[profile?] <dev-haskell/edit-distance-0.3:=[profile?]
	>=dev-haskell/enummapset-0.6.0.3:=[profile?] <dev-haskell/enummapset-0.8:=[profile?]
	>=dev-haskell/equivalence-0.3.5:=[profile?] <dev-haskell/equivalence-0.5:=[profile?]
	>=dev-haskell/filelock-0.1.1.5:=[profile?] <dev-haskell/filelock-0.2:=[profile?]
	>=dev-haskell/filemanip-0.3.6.3:=[profile?] <dev-haskell/filemanip-0.4:=[profile?]
	>=dev-haskell/generic-data-0.9.2.0:=[profile?] <dev-haskell/generic-data-1.2:=[profile?]
	>=dev-haskell/gitrev-1.3.1:=[profile?] <dev-haskell/gitrev-2:=[profile?]
	>=dev-haskell/hashable-1.3.0.0:=[profile?] <dev-haskell/hashable-1.6:=[profile?]
	>=dev-haskell/haskeline-0.7.5.0:=[profile?] <dev-haskell/haskeline-0.9:=[profile?]
	>=dev-haskell/monad-control-1.0.2.3:=[profile?] <dev-haskell/monad-control-1.1:=[profile?]
	>=dev-haskell/murmur-hash-0.1.0.9:=[profile?] <dev-haskell/murmur-hash-0.2:=[profile?]
	>=dev-haskell/nonempty-containers-0.3.4.1:=[profile?] <dev-haskell/nonempty-containers-0.4:=[profile?]
	>=dev-haskell/parallel-3.2.2.0:=[profile?] <dev-haskell/parallel-3.4:=[profile?]
	>=dev-haskell/peano-0.1.0.1:=[profile?] <dev-haskell/peano-0.2:=[profile?]
	>=dev-haskell/pqueue-1.4.1.3:=[profile?] <dev-haskell/pqueue-1.7:=[profile?]
	>=dev-haskell/process-extras-0.7.4:=[profile?] <dev-haskell/process-extras-0.8:=[profile?]
	>=dev-haskell/regex-tdfa-1.3.1.0:=[profile?] <dev-haskell/regex-tdfa-1.4:=[profile?]
	>=dev-haskell/split-0.2.3.4:=[profile?] <dev-haskell/split-0.3:=[profile?]
	>=dev-haskell/stmonadtrans-0.4.5:=[profile?] <dev-haskell/stmonadtrans-0.5:=[profile?]
	>=dev-haskell/strict-0.4.0.1:=[profile?] <dev-haskell/strict-0.6:=[profile?]
	>=dev-haskell/text-1.2.4.0:=[profile?] <dev-haskell/text-2.2:=[profile?]
	>=dev-haskell/th-lift-instances-0.1.18:=[profile?] <dev-haskell/th-lift-instances-0.1.21:=[profile?]
	>=dev-haskell/unordered-containers-0.2.10.0:=[profile?] <dev-haskell/unordered-containers-0.3:=[profile?]
	>=dev-haskell/uri-encode-1.5.0.7:=[profile?] <dev-haskell/uri-encode-1.6:=[profile?]
	>=dev-haskell/vector-0.12.1.2:=[profile?] <dev-haskell/vector-0.14:=[profile?]
	>=dev-haskell/vector-hashtables-0.1.1.1:=[profile?] <dev-haskell/vector-hashtables-0.2:=[profile?]
	>=dev-haskell/zlib-0.6.2.2:=[profile?] <dev-haskell/zlib-0.8:=[profile?]
	>=dev-lang/ghc-9.0.2:=
	enable-cluster-counting? ( >=dev-haskell/text-icu-0.7.1.0:=[profile?] <dev-haskell/text-icu-0.9:=[profile?] )
"

RDEPEND+="
	emacs? (
		>=app-editors/emacs-23.1:*
		app-emacs/haskell-mode
	)
"
PDEPEND="
	stdlib? (
		~sci-mathematics/agda-stdlib-${MY_GENTOO_AGDA_STDLIB_V}
	)
"

DEPEND="${RDEPEND}
	>=dev-haskell/alex-3.2.5
	>=dev-haskell/cabal-3.4.1.0
	>=dev-haskell/happy-1.19.12
"
BDEPEND="
	emacs? (
		>=app-editors/emacs-23.1:*
	)
"

SITEFILE="50${PN}2-gentoo.el"

src_prepare() {
	haskell-cabal_src_prepare

	# This currently breaks the .cabal file. Using patch instead
	#if ! use emacs; then
	#	sed -e '/.*emacs-mode.*$/d' \
	#		-i "${S}/${CABAL_PN}.cabal" \
	#		|| die "Could not remove agda-mode from ${CABAL_PN}.cabal"
	#fi
	use emacs || eapply "${FILESDIR}/${PN}-2.8.0-remove-emacs.patch"
}

src_configure() {
	haskell-cabal_src_configure \
		$(cabal_flag debug debug) \
		$(cabal_flag debug debug-parsing) \
		$(cabal_flag debug debug-serialisation) \
		$(cabal_flag dump-core dump-core) \
		$(cabal_flag emacs emacs) \
		$(cabal_flag enable-cluster-counting enable-cluster-counting) \
		$(cabal_flag optimise-heavily optimise-heavily) \
		$(cabal_flag xdg-data-home use-xdg-data-home)
}

src_compile() {
	if use emacs; then
		BYTECOMPFLAGS="-L ./src/data/emacs-mode"
		elisp-compile src/data/emacs-mode/*.el \
			|| die "Failed to compile emacs mode"
	fi
	export LD_LIBRARY_PATH="${S}/dist/build${LD_LIBRARY_PATH+:}${LD_LIBRARY_PATH}"
	haskell-cabal_src_compile
}

src_install() {
	local add="${ED}"/usr/share/"${P}/ghc-$(ghc-version)"

	haskell-cabal_src_install

	export LD_LIBRARY_PATH="${S}/dist/build${LD_LIBRARY_PATH+:}${LD_LIBRARY_PATH}"

	# Generate .agdai files for primitives
	pushd "${add}/lib/prim"
	Agda_datadir="${add}" "${ED}"/usr/bin/agda --build-library || die
	popd

	if use emacs; then
		elisp-install ${PN} src/data/emacs-mode/*.el \
			|| die "Failed to install emacs mode"
		elisp-site-file-install "${FILESDIR}/${SITEFILE}" \
			|| die "Failed to install elisp site file"
	fi
}

pkg_postinst() {
	haskell-cabal_pkg_postinst
	if use emacs; then
		elisp-site-regen
	fi
}

pkg_postrm() {
	haskell-cabal_pkg_postrm
	if use emacs; then
		elisp-site-regen
	fi
}
