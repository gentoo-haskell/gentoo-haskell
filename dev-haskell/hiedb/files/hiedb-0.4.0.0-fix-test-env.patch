From: hololeap <hololeap@protonmail.com>
Signed-off-by: hololeap <hololeap@protonmail.com>

The tests expect the hiedb executable to be somewhere in PATH. This adds
the needed directory to the PATH environment variable.

diff -urN hiedb-0.4.0.0-old/hiedb.cabal hiedb-0.4.0.0/hiedb.cabal
--- hiedb-0.4.0.0-old/hiedb.cabal	2001-09-08 19:46:40.000000000 -0600
+++ hiedb-0.4.0.0/hiedb.cabal	2021-07-15 13:04:12.692139063 -0600
@@ -89,5 +96,6 @@
                     , hspec
                     , process
                     , temporary
+                    , transformers
   if impl(ghc >= 9.0)
     build-depends: ghc-api-compat

diff -urN hiedb-0.4.0.0-orig/test/Main.hs hiedb-0.4.0.0-edited/test/Main.hs
--- hiedb-0.4.0.0-orig/test/Main.hs	2001-09-08 19:46:40.000000000 -0600
+++ hiedb-0.4.0.0-edited/test/Main.hs	2021-07-15 13:27:03.143972773 -0600
@@ -1,6 +1,8 @@
 {-# LANGUAGE CPP #-}
 module Main where
 
+import Control.Monad.Trans.Class (lift)
+import Control.Monad.Trans.Maybe (MaybeT(..), runMaybeT)
 import GHC.Paths (libdir, ghc)
 import HieDb (HieDb, HieModuleRow (..), LibDir (..), ModuleInfo (..), withHieDb, withHieFile, addRefsFromLoaded, deleteMissingRealFiles)
 import HieDb.Query (getAllIndexedMods, lookupHieFile, resolveUnitId, lookupHieFileFromSource)
@@ -13,7 +15,7 @@
 import System.Exit (ExitCode (..), die)
 import System.FilePath ((</>))
 import System.Process (callProcess, proc, readCreateProcessWithExitCode)
-import System.Environment (lookupEnv)
+import System.Environment (lookupEnv, setEnv)
 import System.IO.Temp
 import System.IO
 import Test.Hspec (Expectation, Spec, afterAll_, around, beforeAll_, describe, hspec, it, runIO,
@@ -320,11 +322,16 @@
   putStrLn $ unwords $ "RUNNING: hiedb" : argsWithTestDb
   readCreateProcessWithExitCode createProc ""
 
-
 findHieDbExecutable :: IO FilePath
-findHieDbExecutable =
-  maybe (die "Did not find hiedb executable") pure =<< findExecutable "hiedb"
-
+findHieDbExecutable = do
+  maybe (die "Did not find hiedb executable") pure =<< runMaybeT go
+  where 
+    go = do
+      path <- MaybeT $ lookupEnv "PATH"
+      lift $ setEnv "PATH" $ addToPath path
+      MaybeT $ findExecutable "hiedb"
+    addToPath p = distPath ++ ":" ++ p
+    distPath = "dist/build/hiedb/"
 
 cleanTestData :: IO ()
 cleanTestData = removeDirectoryRecursive testTmp
