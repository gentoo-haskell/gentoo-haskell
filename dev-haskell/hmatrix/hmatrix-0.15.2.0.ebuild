# Copyright 1999-2013 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $

EAPI=5

# ebuild generated by hackport 0.3.4.9999

CABAL_FEATURES="lib profile haddock hoogle hscolour"
inherit haskell-cabal

DESCRIPTION="Linear algebra and numerical computation"
HOMEPAGE="https://github.com/albertoruiz/hmatrix"
SRC_URI="mirror://hackage/packages/archive/${PN}/${PV}/${P}.tar.gz"

LICENSE="GPL-2"
SLOT="0/${PV}"
KEYWORDS="~amd64 ~x86"
IUSE="+dd debugfpu debugnan finit mkl unsafe"

RDEPEND="dev-haskell/binary:=[profile?]
	dev-haskell/random:=[profile?]
	dev-haskell/storable-complex:=[profile?]
	>=dev-haskell/vector-0.8:=[profile?]
	>=dev-lang/ghc-6.10.4:=
	sci-libs/gsl
	mkl? ( sci-libs/mkl )
	virtual/blas
	virtual/cblas
	virtual/lapack
"
DEPEND="${RDEPEND}
	>=dev-haskell/cabal-1.8
"

src_prepare() {
	# Configure.hs is does not try pkg-config. Instead it tries link options that might
	# work in some configurations on some operating systems, hides the link errors, and
	# gives in.
	sed -e 's@, std_err = CreatePipe @@' \
		-i "${S}/Config.hs" \
		|| "Could not sed Config.hs to show any link errors"
}

src_configure() {
	local modules="gsl lapack cblas"
	if use mkl; then
		modules+=" mkl"
	fi
	local hmatrix_opts=""
	local hmatrix_incs=$(pkg-config "${modules}" --cflags-only-I | sed -e 's@ -I@,@g' -e 's@-I@@')
	if [ ! -e "${hmatrix_incs}" ]; then
		hmatrix_opts="--extra-include-dirs=${hmatrix_incs} "
	fi
	local hmatrix_cflags_other=$(pkg-config "${modules}" --cflags-only-other)
	if [ ! -e "${hmatrix_cflags_other}" ]; then
		hmatrix_opts="--gcc-options=\"${hmatrix_cflags_other}\" "
	fi
	local hmatrix_linkflags_other=$(pkg-config "${modules}" --libs-only-other)
	if [ ! -e "${hmatrix_cflags_other}" ]; then
		hmatrix_opts="--ld-options=\"${hmatrix_linkflags_other}\" "
	fi
	local hmatrix_libs=$(pkg-config "${modules}" --libs-only-l | sed -e 's@ -l@,@g' -e 's@-l@@')
	local hmatrix_opts+="--configure-option=link:${hmatrix_libs}"
	haskell-cabal_src_configure \
		$(cabal_flag dd dd) \
		$(cabal_flag debugfpu debugfpu) \
		$(cabal_flag debugnan debugnan) \
		$(cabal_flag finit finit) \
		$(cabal_flag mkl mkl) \
		$(cabal_flag unsafe unsafe) \
		${hmatrix_opts}
}
