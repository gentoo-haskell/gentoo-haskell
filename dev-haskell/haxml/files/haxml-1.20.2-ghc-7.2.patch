diff --git a/HaXml.cabal b/HaXml.cabal
index 5ee5dd7..7aa4e0d 100644
--- a/HaXml.cabal
+++ b/HaXml.cabal
@@ -52,7 +52,7 @@ library
         Text.XML.HaXml.Xtract.Lex,
         Text.XML.HaXml.Xtract.Parse
   hs-source-dirs: src
-  build-depends: haskell98, polyparse >= 1.2, filepath
+  build-depends: polyparse >= 1.2, filepath
   if flag(splitBase)
     build-depends: base >= 3 && < 6, pretty, random, containers
   else
diff --git a/src/Text/XML/HaXml/ByteStringPP.hs b/src/Text/XML/HaXml/ByteStringPP.hs
index e0f7e0e..ee6b2da 100644
--- a/src/Text/XML/HaXml/ByteStringPP.hs
+++ b/src/Text/XML/HaXml/ByteStringPP.hs
@@ -21,7 +21,7 @@ module Text.XML.HaXml.ByteStringPP
   ) where
 
 import Prelude hiding (maybe,either,elem,concat)
-import Maybe hiding (maybe)
+import Data.Maybe hiding (maybe)
 import Data.List (intersperse)
 --import Data.ByteString.Lazy hiding (pack,map,head,any,singleton,intersperse,join)
 import Data.ByteString.Lazy.Char8 (ByteString(), concat, pack, singleton, intercalate
diff --git a/src/Text/XML/HaXml/Combinators.hs b/src/Text/XML/HaXml/Combinators.hs
index e5fc4ad..c179bef 100644
--- a/src/Text/XML/HaXml/Combinators.hs
+++ b/src/Text/XML/HaXml/Combinators.hs
@@ -51,7 +51,7 @@ module Text.XML.HaXml.Combinators
 
 
 import Text.XML.HaXml.Types
-import Maybe (fromMaybe)
+import Data.Maybe (fromMaybe)
 
 infixl 6 `with`, `without`
 infixr 5 `o`, `oo`, `union`, `andThen`		-- , `orelse`
diff --git a/src/Text/XML/HaXml/DtdToHaskell/Convert.hs b/src/Text/XML/HaXml/DtdToHaskell/Convert.hs
index e61012e..db01913 100644
--- a/src/Text/XML/HaXml/DtdToHaskell/Convert.hs
+++ b/src/Text/XML/HaXml/DtdToHaskell/Convert.hs
@@ -5,7 +5,7 @@ module Text.XML.HaXml.DtdToHaskell.Convert
   ( dtd2TypeDef
   ) where
 
-import List (intersperse,nub)
+import Data.List (intersperse,nub)
 
 import Text.XML.HaXml.Types hiding (Name)
 import Text.XML.HaXml.DtdToHaskell.TypeDef
diff --git a/src/Text/XML/HaXml/DtdToHaskell/Instance.hs b/src/Text/XML/HaXml/DtdToHaskell/Instance.hs
index dcd739c..d92a54a 100644
--- a/src/Text/XML/HaXml/DtdToHaskell/Instance.hs
+++ b/src/Text/XML/HaXml/DtdToHaskell/Instance.hs
@@ -2,7 +2,7 @@ module Text.XML.HaXml.DtdToHaskell.Instance
   ( mkInstance
   ) where
 
-import List (intersperse)
+import Data.List (intersperse)
 
 import Text.XML.HaXml.DtdToHaskell.TypeDef
 import Text.PrettyPrint.HughesPJ
diff --git a/src/Text/XML/HaXml/DtdToHaskell/TypeDef.hs b/src/Text/XML/HaXml/DtdToHaskell/TypeDef.hs
index ced25f6..6fa3da3 100644
--- a/src/Text/XML/HaXml/DtdToHaskell/TypeDef.hs
+++ b/src/Text/XML/HaXml/DtdToHaskell/TypeDef.hs
@@ -18,8 +18,8 @@ module Text.XML.HaXml.DtdToHaskell.TypeDef
   , name, name_, name_a, name_ac, name_f, mangle, manglef
   ) where
 
-import Char (isLower, isUpper, toLower, toUpper, isDigit)
-import List (intersperse)
+import Data.Char (isLower, isUpper, toLower, toUpper, isDigit)
+import Data.List (intersperse)
 import Text.PrettyPrint.HughesPJ
 
 
diff --git a/src/Text/XML/HaXml/Escape.hs b/src/Text/XML/HaXml/Escape.hs
index 59e87d3..3a5b283 100644
--- a/src/Text/XML/HaXml/Escape.hs
+++ b/src/Text/XML/HaXml/Escape.hs
@@ -55,7 +55,7 @@ module Text.XML.HaXml.Escape(
 
    ) where
 
-import Char
+import Data.Char
 -- import Numeric
 import Text.XML.HaXml.Types
 
diff --git a/src/Text/XML/HaXml/Html/Generate.hs b/src/Text/XML/HaXml/Html/Generate.hs
index 2b96b08..6b79c15 100644
--- a/src/Text/XML/HaXml/Html/Generate.hs
+++ b/src/Text/XML/HaXml/Html/Generate.hs
@@ -28,7 +28,7 @@ module Text.XML.HaXml.Html.Generate
   , htmlprint
   ) where
 
-import Char (isSpace)
+import Data.Char (isSpace)
 
 import Text.XML.HaXml.Types
 import Text.XML.HaXml.Combinators
diff --git a/src/Text/XML/HaXml/Html/Parse.hs b/src/Text/XML/HaXml/Html/Parse.hs
index f0b755e..58d17a8 100644
--- a/src/Text/XML/HaXml/Html/Parse.hs
+++ b/src/Text/XML/HaXml/Html/Parse.hs
@@ -13,10 +13,10 @@ module Text.XML.HaXml.Html.Parse
 
 import Prelude hiding (either,maybe,sequence)
 import qualified Prelude (either)
-import Maybe hiding (maybe)
-import Char (toLower, isSpace, isDigit, isHexDigit)
+import Data.Maybe hiding (maybe)
+import Data.Char (toLower, isSpace, isDigit, isHexDigit)
 import Numeric (readDec,readHex)
-import Monad
+import Control.Monad
 
 import Text.XML.HaXml.Types
 import Text.XML.HaXml.Lex
diff --git a/src/Text/XML/HaXml/Html/ParseLazy.hs b/src/Text/XML/HaXml/Html/ParseLazy.hs
index 3a404d6..236e765 100644
--- a/src/Text/XML/HaXml/Html/ParseLazy.hs
+++ b/src/Text/XML/HaXml/Html/ParseLazy.hs
@@ -13,10 +13,10 @@ module Text.XML.HaXml.Html.ParseLazy
 
 import Prelude hiding (either,maybe,sequence)
 import qualified Prelude (either)
-import Maybe hiding (maybe)
-import Char (toLower, isSpace, isDigit, isHexDigit)
+import Data.Maybe hiding (maybe)
+import Data.Char (toLower, isSpace, isDigit, isHexDigit)
 import Numeric (readDec,readHex)
-import Monad
+import Control.Monad
 
 import Text.XML.HaXml.Types
 import Text.XML.HaXml.Lex
diff --git a/src/Text/XML/HaXml/Html/Pretty.hs b/src/Text/XML/HaXml/Html/Pretty.hs
index 6a5e8d7..1857acc 100644
--- a/src/Text/XML/HaXml/Html/Pretty.hs
+++ b/src/Text/XML/HaXml/Html/Pretty.hs
@@ -9,9 +9,9 @@ module Text.XML.HaXml.Html.Pretty
   ) where
 
 import Prelude hiding (maybe,either)
-import Maybe hiding (maybe)
-import List (intersperse)
-import Char (isSpace)
+import Data.Maybe hiding (maybe)
+import Data.List (intersperse)
+import Data.Char (isSpace)
 import Text.PrettyPrint.HughesPJ
 import Text.XML.HaXml.Types
 
diff --git a/src/Text/XML/HaXml/Lex.hs b/src/Text/XML/HaXml/Lex.hs
index 71f376f..6f7bea6 100644
--- a/src/Text/XML/HaXml/Lex.hs
+++ b/src/Text/XML/HaXml/Lex.hs
@@ -26,7 +26,7 @@ module Text.XML.HaXml.Lex
   , Section(..)
   ) where
 
-import Char
+import Data.Char
 import Text.XML.HaXml.Posn
 
 data Where = InTag String | NotInTag
diff --git a/src/Text/XML/HaXml/Parse.hs b/src/Text/XML/HaXml/Parse.hs
index 1885200..bebab36 100644
--- a/src/Text/XML/HaXml/Parse.hs
+++ b/src/Text/XML/HaXml/Parse.hs
@@ -31,10 +31,10 @@ module Text.XML.HaXml.Parse
 
 import Prelude hiding (either,maybe,sequence)
 import qualified Prelude (either)
-import Maybe hiding (maybe)
-import List (intersperse)       -- debugging only
-import Char (isSpace,isDigit,isHexDigit)
-import Monad hiding (sequence)
+import Data.Maybe hiding (maybe)
+import Data.List (intersperse)       -- debugging only
+import Data.Char (isSpace,isDigit,isHexDigit)
+import Control.Monad hiding (sequence)
 import Numeric (readDec,readHex)
 
 import Text.XML.HaXml.Types
diff --git a/src/Text/XML/HaXml/ParseLazy.hs b/src/Text/XML/HaXml/ParseLazy.hs
index 450ce6f..c7a08eb 100644
--- a/src/Text/XML/HaXml/ParseLazy.hs
+++ b/src/Text/XML/HaXml/ParseLazy.hs
@@ -30,10 +30,10 @@ module Text.XML.HaXml.ParseLazy
 
 import Prelude hiding (either,maybe,sequence,catch)
 import qualified Prelude (either)
-import Maybe hiding (maybe)
-import List (intersperse)       -- debugging only
-import Char (isSpace,isDigit,isHexDigit)
-import Monad hiding (sequence)
+import Data.Maybe hiding (maybe)
+import Data.List (intersperse)       -- debugging only
+import Data.Char (isSpace,isDigit,isHexDigit)
+import Control.Monad hiding (sequence)
 import Numeric (readDec,readHex)
 --import Control.Exception (catch)
 
diff --git a/src/Text/XML/HaXml/Posn.hs b/src/Text/XML/HaXml/Posn.hs
index 278255c..9cef76f 100644
--- a/src/Text/XML/HaXml/Posn.hs
+++ b/src/Text/XML/HaXml/Posn.hs
@@ -14,7 +14,7 @@ module Text.XML.HaXml.Posn
   , posnFilename, posnLine, posnColumn
   ) where
 
-import Char
+import Data.Char
 
 -- | Source positions contain a filename, line, column, and an
 --   inclusion point, which is itself another source position,
diff --git a/src/Text/XML/HaXml/Pretty.hs b/src/Text/XML/HaXml/Pretty.hs
index 5d6d96b..f1c4f73 100644
--- a/src/Text/XML/HaXml/Pretty.hs
+++ b/src/Text/XML/HaXml/Pretty.hs
@@ -22,8 +22,8 @@ module Text.XML.HaXml.Pretty
   ) where
 
 import Prelude hiding (maybe,either)
-import Maybe hiding (maybe)
-import List (intersperse)
+import Data.Maybe hiding (maybe)
+import Data.List (intersperse)
 --import Char (isSpace)
 import Text.PrettyPrint.HughesPJ
 import Text.XML.HaXml.Types
diff --git a/src/Text/XML/HaXml/ShowXmlLazy.hs b/src/Text/XML/HaXml/ShowXmlLazy.hs
index f84786d..4162d1a 100644
--- a/src/Text/XML/HaXml/ShowXmlLazy.hs
+++ b/src/Text/XML/HaXml/ShowXmlLazy.hs
@@ -5,7 +5,7 @@ import Text.XML.HaXml.TypeMapping -- (toHType, toDTD, Tuple(), Defined, showHTyp
 
 import qualified Text.XML.HaXml.XmlContent as X
 import Prelude hiding (maybe,either)
-import Maybe hiding (maybe)
+import Data.Maybe hiding (maybe)
 import Data.List
 
 -- | Convert a fully-typed XML document to a string (without DTD).
diff --git a/src/Text/XML/HaXml/Validate.hs b/src/Text/XML/HaXml/Validate.hs
index a16081e..ec975ca 100644
--- a/src/Text/XML/HaXml/Validate.hs
+++ b/src/Text/XML/HaXml/Validate.hs
@@ -9,9 +9,9 @@ import qualified Prelude (elem)
 import Text.XML.HaXml.Types
 import Text.XML.HaXml.Combinators (multi,tag,iffind,literal,none,o)
 import Text.XML.HaXml.XmlContent (attr2str)
-import Maybe (fromMaybe,isNothing,fromJust)
-import List (intersperse,nub,(\\))
-import Char (isSpace)
+import Data.Maybe (fromMaybe,isNothing,fromJust)
+import Data.List (intersperse,nub,(\\))
+import Data.Char (isSpace)
 
 #if __GLASGOW_HASKELL__ >= 604 || __NHC__ >= 118 || defined(__HUGS__)
 -- emulate older finite map interface using Data.Map, if it is available
diff --git a/src/Text/XML/HaXml/Wrappers.hs b/src/Text/XML/HaXml/Wrappers.hs
index 4861628..c059ae7 100644
--- a/src/Text/XML/HaXml/Wrappers.hs
+++ b/src/Text/XML/HaXml/Wrappers.hs
@@ -8,9 +8,10 @@ module Text.XML.HaXml.Wrappers
 
 -- imports required for processXmlWith and fix2Args
 import Prelude hiding (filter)
-import System
-import IO
-import List (isSuffixOf)
+import System.Environment
+import System.Exit
+import System.IO
+import Data.List (isSuffixOf)
 import Control.Monad (when)
 
 import Text.XML.HaXml.Types       (Document(..),Content(..))
diff --git a/src/Text/XML/HaXml/XmlContent.hs b/src/Text/XML/HaXml/XmlContent.hs
index d90a0a5..60b8def 100644
--- a/src/Text/XML/HaXml/XmlContent.hs
+++ b/src/Text/XML/HaXml/XmlContent.hs
@@ -31,7 +31,7 @@ module Text.XML.HaXml.XmlContent
   , hGetXml,  hPutXml, fpsHPutXml
   ) where
 
-import IO
+import System.IO
 import qualified Text.XML.HaXml.ByteStringPP as FPS (document)
 import qualified Data.ByteString.Lazy.Char8 as FPS
 
diff --git a/src/Text/XML/HaXml/XmlContent/Haskell.hs b/src/Text/XML/HaXml/XmlContent/Haskell.hs
index da9e5da..a1127a8 100644
--- a/src/Text/XML/HaXml/XmlContent/Haskell.hs
+++ b/src/Text/XML/HaXml/XmlContent/Haskell.hs
@@ -29,8 +29,8 @@ module Text.XML.HaXml.XmlContent.Haskell
 
   ) where
 
-import IO
-import List (isPrefixOf, isSuffixOf)
+import System.IO
+import Data.List (isPrefixOf, isSuffixOf)
 import qualified Text.XML.HaXml.ByteStringPP as FPS (document)
 import qualified Data.ByteString.Lazy.Char8 as FPS
 
diff --git a/src/Text/XML/HaXml/XmlContent/Parser.hs b/src/Text/XML/HaXml/XmlContent/Parser.hs
index 11161d8..68bb3d6 100644
--- a/src/Text/XML/HaXml/XmlContent/Parser.hs
+++ b/src/Text/XML/HaXml/XmlContent/Parser.hs
@@ -68,9 +68,9 @@ module Text.XML.HaXml.XmlContent.Parser
   ) where
 
 --import IO
-import Maybe (catMaybes)
-import Char  (chr, isSpace)
-import List  (isPrefixOf, isSuffixOf)
+import Data.Maybe (catMaybes)
+import Data.Char  (chr, isSpace)
+import Data.List  (isPrefixOf, isSuffixOf)
 
 import Text.PrettyPrint.HughesPJ (render)
 import qualified Text.XML.HaXml.Pretty as PP
diff --git a/src/Text/XML/HaXml/Xtract/Lex.hs b/src/Text/XML/HaXml/Xtract/Lex.hs
index 3b73b69..327675f 100644
--- a/src/Text/XML/HaXml/Xtract/Lex.hs
+++ b/src/Text/XML/HaXml/Xtract/Lex.hs
@@ -13,7 +13,7 @@ module Text.XML.HaXml.Xtract.Lex
   , Token
   ) where
 
-import Char
+import Data.Char
 
 
 type Token = Either String (Posn, TokenT)
diff --git a/src/Text/XML/HaXml/Xtract/Parse.hs b/src/Text/XML/HaXml/Xtract/Parse.hs
index 5515bad..5e559d2 100644
--- a/src/Text/XML/HaXml/Xtract/Parse.hs
+++ b/src/Text/XML/HaXml/Xtract/Parse.hs
@@ -12,7 +12,7 @@ import Text.XML.HaXml.Xtract.Lex
 import Text.XML.HaXml.Xtract.Combinators as D
 import Text.XML.HaXml.Combinators as C
 import Text.XML.HaXml.Types (Content)
-import List(isPrefixOf)
+import Data.List(isPrefixOf)
 import Text.XML.HaXml.Escape (xmlUnEscapeContent,stdXmlEscaper)
 
 -- output transformer - to ensure that text/references are glued together
diff --git a/src/tools/Canonicalise.hs b/src/tools/Canonicalise.hs
index 21a3514..3d7196a 100644
--- a/src/tools/Canonicalise.hs
+++ b/src/tools/Canonicalise.hs
@@ -1,7 +1,7 @@
 module Main where
 
-import IO
-import List   (isSuffixOf)
+import System.IO
+import Data.List   (isSuffixOf)
 
 import Text.XML.HaXml.Parse      (xmlParse)
 import Text.XML.HaXml.Html.Parse (htmlParse)
diff --git a/src/tools/CanonicaliseLazy.hs b/src/tools/CanonicaliseLazy.hs
index cb941a8..5039055 100644
--- a/src/tools/CanonicaliseLazy.hs
+++ b/src/tools/CanonicaliseLazy.hs
@@ -1,7 +1,7 @@
 module Main where
 
-import IO
-import List (isSuffixOf)
+import System.IO
+import Data.List (isSuffixOf)
 
 import Text.XML.HaXml.ParseLazy      (xmlParse)
 import Text.XML.HaXml.Html.ParseLazy (htmlParse)
diff --git a/src/tools/DtdToHaskell.hs b/src/tools/DtdToHaskell.hs
index 4cb7604..16802b1 100644
--- a/src/tools/DtdToHaskell.hs
+++ b/src/tools/DtdToHaskell.hs
@@ -6,9 +6,10 @@ module Main where
 -- definitions, you should import Xml2Haskell wherever you intend
 -- to read and write XML files with your Haskell programs.
 
-import System
-import IO
-import List (nub,takeWhile,dropWhile)
+import System.Environment
+import System.Exit
+import System.IO
+import Data.List (nub,takeWhile,dropWhile)
 import Control.Monad
 
 --import Text.XML.HaXml.Wrappers   (fix2Args)
diff --git a/src/tools/MkOneOf.hs b/src/tools/MkOneOf.hs
index 632b183..94cbadc 100644
--- a/src/tools/MkOneOf.hs
+++ b/src/tools/MkOneOf.hs
@@ -1,9 +1,10 @@
 module Main where
 
 import Prelude hiding (max)
-import System (getArgs,exitWith,ExitCode(..))
-import Char   (isDigit)
-import IO     (hFlush,stdout)
+import System.Environment (getArgs)
+import System.Exit (exitWith,ExitCode(..))
+import Data.Char   (isDigit)
+import System.IO     (hFlush,stdout)
 import Control.Monad  (when)
 import Text.XML.HaXml (version)
 
diff --git a/src/tools/Validate.hs b/src/tools/Validate.hs
index cc1050a..f684274 100644
--- a/src/tools/Validate.hs
+++ b/src/tools/Validate.hs
@@ -1,7 +1,7 @@
 module Main where
 
-import IO
-import Maybe  (fromJust)
+import System.IO
+import Data.Maybe  (fromJust)
 
 import Text.XML.HaXml.Types     (Document(..))
 import Text.XML.HaXml.Parse     (xmlParse,dtdParse)
diff --git a/src/tools/Xtract.hs b/src/tools/Xtract.hs
index a717dad..d09b1ad 100644
--- a/src/tools/Xtract.hs
+++ b/src/tools/Xtract.hs
@@ -2,10 +2,11 @@
 -- The Xtract tool - an XML-grep.
 ------------------------------------------------------------ 
 module Main where
-import System (getArgs, exitWith, ExitCode(..))
-import IO
-import Char         (toLower)
-import List         (isSuffixOf)
+import System.Environment (getArgs)
+import System.Exit (exitWith, ExitCode(..))
+import System.IO
+import Data.Char         (toLower)
+import Data.List         (isSuffixOf)
 import Control.Monad(when)
 
 import Text.XML.HaXml               (version)
diff --git a/src/tools/XtractLazy.hs b/src/tools/XtractLazy.hs
index 23b1b6f..6a15725 100644
--- a/src/tools/XtractLazy.hs
+++ b/src/tools/XtractLazy.hs
@@ -2,10 +2,11 @@
 -- The Xtract tool - an XML-grep.
 ------------------------------------------------------------ 
 module Main where
-import System (getArgs, exitWith, ExitCode(..))
-import IO
-import Char         (toLower)
-import List         (isSuffixOf)
+import System.Environment (getArgs)
+import System.Exit (exitWith, ExitCode(..))
+import System.IO
+import Data.Char         (toLower)
+import Data.List         (isSuffixOf)
 import Control.Monad(when)
 
 import Text.XML.HaXml               (version)
