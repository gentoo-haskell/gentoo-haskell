--- lambdabot-4.2.3.2-orig/lambdabot.cabal	2011-01-20 13:09:10.000000000 +1100
+++ lambdabot-4.2.3.2-mtl-1/lambdabot.cabal	2011-01-20 18:51:30.818399782 +1100
@@ -30,7 +30,7 @@
 --     description: Use mueval to evaluate pure Haskell expressions at runtime
 
 Library
-    build-depends: base == 4.*, mtl>2, bytestring, unix, filepath
+    build-depends: base == 4.*, mtl, bytestring, unix, filepath
     exposed-modules: Config, IRCBase, File,
                      LBState, LMain, Lambdabot, Message,
                      NickEq, Plugin, Plugin.Activity, Plugin.BF,
@@ -56,7 +56,7 @@
 -- Lambdabot main
 Executable          lambdabot
     Build-depends:       base == 4.*, containers, directory, pretty, parsec, old-time, random, array, network, syb,
-                         unix, mtl>2, bytestring, regex-compat, readline, binary>0.2, haskell-src, haskell-src-exts>=0.4.8,
+                         unix, mtl, bytestring, regex-compat, readline, binary>0.2, haskell-src, haskell-src-exts>=0.4.8,
                          oeis>=0.2, lambdabot-utils, show>=0.3, utf8-string, template-haskell, filepath, tagsoup, HTTP,
                          -- runtime dependencies - for eval etc.
                          brainfuck, unlambda, template-haskell, numbers, logict>=0.4.2, IOSpec, vector-space, MonadRandom,
--- lambdabot-4.2.3.2-orig/Plugin/Pl/Transform.hs	2011-01-20 13:09:10.000000000 +1100
+++ lambdabot-4.2.3.2-mtl-1/Plugin/Pl/Transform.hs	2011-01-20 19:09:28.492216798 +1100
@@ -72,7 +72,7 @@
 
   -- act like a reader monad
   inEnv :: State s a -> State s a
-  inEnv f = state $ \s -> (fst $ runState f s, s)
+  inEnv (State f) = State $ \s -> (fst $ f s, s)
 
   alphaPat (PVar v) = do
     fm <- get
