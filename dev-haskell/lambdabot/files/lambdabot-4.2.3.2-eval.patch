--- lambdabot-4.2.3.2-orig/Plugin/Eval.hs	2011-01-20 13:09:10.000000000 +1100
+++ lambdabot-4.2.3.2/Plugin/Eval.hs	2011-03-15 00:38:23.804429121 +1100
@@ -50,8 +50,7 @@
 plugs :: String -> IO String
 plugs src = do
             load <- findFile "L.hs"
-            let args = ["-E", "-XBangPatterns", "-XNoMonomorphismRestriction", "-XViewPatterns", "--no-imports", "-l", load, "--expression=" ++ src, "+RTS", "-N2", "-RTS"]
-            print args
+            let args = ["-XForeignFunctionInterface", "-XUnliftedFFITypes", "-XImplicitParams", "-XScopedTypeVariables", "-XUnboxedTuples", "-XTypeSynonymInstances", "-XStandaloneDeriving", "-XDeriveDataTypeable", "-XDeriveFunctor", "-XDeriveFoldable", "-XDeriveTraversable", "-XFlexibleContexts", "-XFlexibleInstances", "-XConstrainedClassMethods", "-XMultiParamTypeClasses", "-XFunctionalDependencies", "-XMagicHash", "-XPolymorphicComponents", "-XExistentialQuantification", "-XUnicodeSyntax", "-XPostfixOperators", "-XPatternGuards", "-XLiberalTypeSynonyms", "-XRankNTypes", "-XTypeOperators", "-XDoRec", "-XParallelListComp", "-XEmptyDataDecls", "-XKindSignatures", "-XGeneralizedNewtypeDeriving", "-XBangPatterns", "-XNoMonomorphismRestriction", "-XViewPatterns", "--noimports", "-l", load, "--expression=" ++ src, "+RTS", "-N2", "-RTS"]            
             (out,err,_) <- popen binary args Nothing
             case (out,err) of
                 ([],[]) -> return "Terminated\n"
--- lambdabot-4.2.3.2-orig/State/L.hs	2011-01-20 13:09:10.000000000 +1100
+++ lambdabot-4.2.3.2/State/L.hs	2011-03-15 00:32:24.932008420 +1100
@@ -1,21 +1,21 @@
-{-# LANGUAGE NoMonomorphismRestriction, StandaloneDeriving, UndecidableInstances #-}
+{-# LANGUAGE NoMonomorphismRestriction, StandaloneDeriving, UndecidableInstances, PackageImports #-}
 module L where
 import Prelude hiding ((.),(++),flip)
 import Control.Applicative
 import Control.Arrow
 import Control.Arrow.Operations
 import Control.Monad
-import Control.Monad.Cont
-import Control.Monad.Error
+import "mtl" Control.Monad.Cont
+import "mtl" Control.Monad.Error
 import Control.Monad.Fix
-import Control.Monad.Identity
+import "mtl" Control.Monad.Identity
 import Control.Monad.Instances
 import Control.Monad.Logic
-import Control.Monad.RWS
-import Control.Monad.Reader
+import "mtl" Control.Monad.RWS
+import "mtl" Control.Monad.Reader
 import Control.Monad.ST (ST, runST, fixST)
-import Control.Monad.State
-import Control.Monad.Writer
+import "mtl" Control.Monad.State
+import "mtl" Control.Monad.Writer
 import Control.Parallel
 import Control.Parallel.Strategies
 import Data.Array
--- lambdabot-4.2.3.2-orig/State/Pristine.hs	2011-01-20 13:09:10.000000000 +1100
+++ lambdabot-4.2.3.2/State/Pristine.hs	2011-03-15 00:32:19.482834894 +1100
@@ -1,21 +1,21 @@
-{-# LANGUAGE NoMonomorphismRestriction, StandaloneDeriving, UndecidableInstances #-}
+{-# LANGUAGE NoMonomorphismRestriction, StandaloneDeriving, UndecidableInstances, PackageImports #-}
 module L where
 import Prelude hiding ((.),(++),flip)
 import Control.Applicative
 import Control.Arrow
 import Control.Arrow.Operations
 import Control.Monad
-import Control.Monad.Cont
-import Control.Monad.Error
+import "mtl" Control.Monad.Cont
+import "mtl" Control.Monad.Error
 import Control.Monad.Fix
-import Control.Monad.Identity
+import "mtl" Control.Monad.Identity
 import Control.Monad.Instances
 import Control.Monad.Logic
-import Control.Monad.RWS
-import Control.Monad.Reader
+import "mtl" Control.Monad.RWS
+import "mtl" Control.Monad.Reader
 import Control.Monad.ST (ST, runST, fixST)
-import Control.Monad.State
-import Control.Monad.Writer
+import "mtl" Control.Monad.State
+import "mtl" Control.Monad.Writer
 import Control.Parallel
 import Control.Parallel.Strategies
 import Data.Array
