diff --git a/HsColour.hs b/HsColour.hs
index 74b38fc..bec4754 100644
--- a/HsColour.hs
+++ b/HsColour.hs
@@ -5,10 +5,11 @@ import Language.Haskell.HsColour
 import qualified Language.Haskell.HsColour as HSColour
 import Language.Haskell.HsColour.Colourise (readColourPrefs)
 import Language.Haskell.HsColour.Options
-import System
-import IO
-import Monad (when)
-import List  (intersperse, isSuffixOf)
+import qualified System.Environment as System
+import System.Exit
+import System.IO
+import Control.Monad (when)
+import Data.List  (intersperse, isSuffixOf)
 --import Debug.Trace
 
 -- Deal with UTF-8 I/O.
@@ -156,6 +157,3 @@ readUTF8File name   = openFile name ReadMode >>=
                       set_utf8_io_enc >>=
                       hGetContents
 
-withFile :: FilePath -> IOMode -> (Handle -> IO r) -> IO r
-withFile name mode = bracket (openFile name mode) hClose
-
diff --git a/Language/Haskell/HsColour.hs b/Language/Haskell/HsColour.hs
index ffe1539..b26794d 100644
--- a/Language/Haskell/HsColour.hs
+++ b/Language/Haskell/HsColour.hs
@@ -23,8 +23,8 @@ import qualified Language.Haskell.HsColour.CSS        as CSS
 import qualified Language.Haskell.HsColour.InlineCSS  as ICSS
 import qualified Language.Haskell.HsColour.LaTeX      as LaTeX
 import qualified Language.Haskell.HsColour.MIRC       as MIRC
-import List(mapAccumL, isPrefixOf)
-import Maybe
+import Data.List(mapAccumL, isPrefixOf)
+import Data.Maybe
 import Language.Haskell.HsColour.Output
 --import Debug.Trace
 
diff --git a/Language/Haskell/HsColour/ANSI.hs b/Language/Haskell/HsColour/ANSI.hs
index 38efe25..5bcc1ee 100644
--- a/Language/Haskell/HsColour/ANSI.hs
+++ b/Language/Haskell/HsColour/ANSI.hs
@@ -16,8 +16,8 @@ module Language.Haskell.HsColour.ANSI
 
 import Language.Haskell.HsColour.ColourHighlight
 
-import List (intersperse,isPrefixOf)
-import Char (isDigit)
+import Data.List (intersperse,isPrefixOf)
+import Data.Char (isDigit)
 
 
 -- Basic screen control codes:
diff --git a/Language/Haskell/HsColour/Anchors.hs b/Language/Haskell/HsColour/Anchors.hs
index e255e18..3faa8f7 100644
--- a/Language/Haskell/HsColour/Anchors.hs
+++ b/Language/Haskell/HsColour/Anchors.hs
@@ -4,7 +4,7 @@ module Language.Haskell.HsColour.Anchors
 
 import Language.Haskell.HsColour.Classify
 import Language.Haskell.HsColour.General
-import List
+import Data.List
 
 -- This is an attempt to find the first defining occurrence of an
 -- identifier (function, datatype, class) in a Haskell source file.
diff --git a/Language/Haskell/HsColour/Classify.hs b/Language/Haskell/HsColour/Classify.hs
index 906c157..86a1261 100644
--- a/Language/Haskell/HsColour/Classify.hs
+++ b/Language/Haskell/HsColour/Classify.hs
@@ -3,8 +3,8 @@ module Language.Haskell.HsColour.Classify
   , tokenise
   ) where
 
-import Char
-import List
+import Data.Char (isSpace, isUpper, isLower, isDigit)
+import Data.List
 
 -- | Lex Haskell source code into an annotated token stream, without
 --   discarding any characters or layout.
diff --git a/Language/Haskell/HsColour/Colourise.hs b/Language/Haskell/HsColour/Colourise.hs
index 8458f0a..407ea4c 100644
--- a/Language/Haskell/HsColour/Colourise.hs
+++ b/Language/Haskell/HsColour/Colourise.hs
@@ -9,9 +9,9 @@ module Language.Haskell.HsColour.Colourise
 import Language.Haskell.HsColour.ColourHighlight
 import Language.Haskell.HsColour.Classify (TokenType(..))
 
-import IO (hPutStrLn,stderr)
-import System (getEnv)
-import List
+import System.IO (hPutStrLn,stderr)
+import System.Environment (getEnv)
+import Data.List
 
 -- | Colour preferences.
 data ColourPrefs = ColourPrefs
diff --git a/Language/Haskell/HsColour/HTML.hs b/Language/Haskell/HsColour/HTML.hs
index 782a2fe..55813e0 100644
--- a/Language/Haskell/HsColour/HTML.hs
+++ b/Language/Haskell/HsColour/HTML.hs
@@ -10,7 +10,7 @@ import Language.Haskell.HsColour.Anchors
 import Language.Haskell.HsColour.Classify as Classify
 import Language.Haskell.HsColour.Colourise
 
-import Char(isAlphaNum)
+import Data.Char(isAlphaNum)
 
 
 -- | Formats Haskell source code using HTML with font tags.
diff --git a/Language/Haskell/HsColour/MIRC.hs b/Language/Haskell/HsColour/MIRC.hs
index 44b0e0e..37939cd 100644
--- a/Language/Haskell/HsColour/MIRC.hs
+++ b/Language/Haskell/HsColour/MIRC.hs
@@ -5,7 +5,7 @@ module Language.Haskell.HsColour.MIRC (hscolour) where
 import Language.Haskell.HsColour.Classify as Classify
 import Language.Haskell.HsColour.Colourise
 
-import Char(isAlphaNum)
+import Data.Char(isAlphaNum)
 
 
 -- | Formats Haskell source code using mIRC codes.
diff --git a/hscolour.cabal b/hscolour.cabal
index 27d61e2..ee73d97 100644
--- a/hscolour.cabal
+++ b/hscolour.cabal
@@ -6,7 +6,7 @@ Author: Malcolm Wallace
 Homepage: http://www.cs.york.ac.uk/fp/darcs/hscolour/
 License: GPL
 License-file: LICENCE-GPL
-Build-depends: haskell98, base < 10
+Build-depends: base < 10
 Extensions: 
 Synopsis: Colourise Haskell code.
 Description:
