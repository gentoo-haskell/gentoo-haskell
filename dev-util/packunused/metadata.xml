<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<herd>haskell</herd>
	<longdescription>
		This simple CLI tool allows to find out which of the packages listed as
		@build-depends@ in a Cabal package description file are redundant.
		
		@packunused@ works by taking advantage of GHC&#39;s
		@-ddump-minimal-imports@ feature which creates @.import@ files for
		each compiled module containing a /minimal/ set of explicit import
		declarations. These @.import@ files together with Cabal&#39;s generated
		package configuration meta-data is analyzed by @packunused@ to
		detect potentially redundant package dependencies.
		
		In order to use @packunused@ you have to configure the package as
		usual. See the example session below:
		
		&gt; cabal clean
		&gt; rm *.imports
		&gt; cabal configure -O0 --disable-library-profiling
		&gt; cabal build --ghc-option=-ddump-minimal-imports
		&gt; packunused
		
		The @-O0 --disable-library-profiling@ options are just to speed up
		compilation. In some cases you might want to pass additional options
		to the @configure@ step, such as @--enable-benchmark@ or
		@--enable-tests@.
		
		When run, @packunused@ prints a report to standard output listing
		its findings for each component built. The following is an example
		for the @packunused@ package itself, with a redundant dependency
		added for demonstration on purpose:
		
		&gt; detected package components
		&gt; ~~~~~~~~~~~~~~~~~~~~~~~~~~~
		&gt;
		&gt;  - executable(s): packunused
		&gt;
		&gt; (component names suffixed with &#39;*&#39; are not configured to be built)
		&gt;
		&gt; executable(packunused)
		&gt; ~~~~~~~~~~~~~~~~~~~~~~
		&gt;
		&gt; The following package dependencies seem redundant:
		&gt;
		&gt;  - criterion-0.6.2.0-9dd4d764629a47662168743b2dfda9bc
		&gt;
	</longdescription>
</pkgmetadata>
