--- darcs-2.5-orig/src/Darcs/Patch/Choices.hs	2010-10-25 02:29:26.000000000 +1100
+++ darcs-2.5/src/Darcs/Patch/Choices.hs	2011-02-05 18:50:31.921379741 +1100
@@ -62,8 +62,7 @@
                       substitute
                     ) where
 
-import Control.Monad.State( State(..) )
-
+import Control.Monad.State ( State, state )
 import Darcs.Patch
 import Darcs.Patch.Permutations ( commuteWhatWeCanRL, commuteWhatWeCanFL )
 import Darcs.Patch.Patchy ( Invert, Commute )
@@ -253,7 +252,7 @@
 
 patchSlot' :: Patchy p =>
               TaggedPatch p C(a b) -> State (PatchChoices p C(x y)) Slot
-patchSlot' = State . patchSlot
+patchSlot' = state . patchSlot
 
 forceMatchingFirst :: forall p C(a b). Patchy p =>
                       ( FORALL(x y) TaggedPatch p C(x y) -> Bool)
--- darcs-2.5-orig/src/Darcs/SelectChanges.hs	2010-10-25 02:29:26.000000000 +1100
+++ darcs-2.5/src/Darcs/SelectChanges.hs	2011-02-05 18:52:55.757277141 +1100
@@ -32,7 +32,7 @@
 import Control.Monad ( when, (>=>) )
 import Control.Monad.Trans ( liftIO )
 import Control.Monad.Reader ( ReaderT, Reader, asks, runReader, runReaderT )
-import Control.Monad.State ( State(..), StateT, modify, gets, execStateT )
+import Control.Monad.State ( State(..), runState, StateT, modify, gets, execStateT )
 import System.Exit ( exitWith, ExitCode(ExitSuccess) )
 
 import English ( Noun(..), englishNum  )
